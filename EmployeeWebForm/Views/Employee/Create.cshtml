@model EmployeeWebForm.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/Content/Employee/EmployeeStyleSheet.css" rel="stylesheet" />
<fieldset>
    <legend>Create Employee</legend>
    <input type="hidden" data-bind="value: EmployeeID" class="form-control" id="EmployeeID" />
    <div class="editor-label">
        <strong>EmployeeName</strong>
    </div>
    <div class="editor-field">
        <input data-bind="value: EmployeeName" class="form-control" id="employeeName" />
        <span id="EmployeeName-error" class="error"></span>

    </div>
    <div class="editor-label">
        <strong>EmailID</strong>
</div>
    <div class="editor-field">
        <input data-bind="value: EmailID" class="form-control" id="emailID" />
        <span id="EmailID-error" class="error"></span>

    </div>
    <div class="editor-label">
        <strong>PhoneNumber</strong>
    </div>
    <div class="editor-field">
        <input data-bind="value: PhoneNumber" class="form-control" id="phoneNumber" />
        <span id="PhoneNumber-error" class="error"></span>
    </div>
    <div class="editor-label">
        <strong>City</strong>
    </div>
    <div class="editor-field">
        <select data-bind="value: Address" class="form-control" id="address">
            <option value="select">Select a City</option>
            <option value="Hyderabad">Hyderabad</option>
            <option value="Banglore">Banglore</option>
            <option value="Chennai">Chennai</option>
        </select>
        <span id="Address-error" class="error"></span>
    </div>
    <div class="editor-label">
        <strong>DateOfBirth</strong>
    </div>
    <div class="editor-field">
        <input type="date" data-bind="value: DateOfBirth" class="form-control" id="dateOfBirth" />
        <span id="DateOfBirth-error" class="error"></span>
    </div>
    <div class="editor-label">
        <strong>DateOfJoining</strong>
    </div>
    <div class="editor-field">
        <input type="date" data-bind="value: DateOfJoining" class="form-control" id="DateOfJoining" />
        <span id="DateOfJoining-error" class="error"></span>
    </div>
    <div class="editor-label">
        <strong>Salary</strong>
    </div>
    <div class="editor-field">
        <input data-bind="value: Salary" class="form-control" id="Salary" />
        <span id="Salary-error" class="error"></span>
    </div>
    <br />
    <p>
        <input type="button" value="Create" data-bind="click: SaveEmployee" id="create" class="btn btn-default" style="background-color:cadetblue;color:aquamarine">
        <input type="button" value="Save" data-bind="click: EditEmployee" id="edit" class="btn btn-default"style="background-color:white;color:lawngreen">
    </p>
</fieldset>
<div id="Grid">
    <table class="table">
        <thead>
            <tr>
                <th>EmployeeName</th>
                <th>EmailID</th>
                <th>PhoneNumber</th>
                <th>Address</th>
                <th>DateOfBirth</th>
                <th>DateOfJoining</th>
                <th>Salary</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="foreach: Employee">
            <tr>
                <td data-bind="text: EmployeeName"></td>
                <td data-bind="text: EmailID"></td>
                <td data-bind="text: PhoneNumber"></td>
                <td data-bind="text: Address"></td>
                <td data-bind="text: DateOfBirth"></td>
                <td data-bind="text: DateOfJoining"></td>
                <td data-bind="text: Salary"></td>
                <td>
                    <button type="button" data-bind="click: EditEmployee" style="color:darkgreen">Edit</button>
                    <button type="button" data-bind="click: DeleteEmployee" style="color:red">Delete</button>
                </td>
            </tr>
        </tbody>
    </table>
    <div style=" display:flex; column-gap:10px">
        @using (Html.BeginForm("Export", "Employee", new { id = "pdf" }, FormMethod.Get))
        {
            <input type="submit" id="btnSubmit" value="Export pdf" style="color:orangered;background-color:lightyellow" />
        }
        @using (Html.BeginForm("Export", "Employee", new { id = "excel" }, FormMethod.Get))
        {
            <input type="submit" id="btnSubmit" value="Export excel" style="color: seagreen; background-color: lightyellow" />
        }
    </div>
</div>

@section Scripts
{
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/Employeejs/EmployeeScript.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate-vsdoc.js"></script>
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    @*<script src="~/Scripts/knockout.validation.js"></script>
        <script src="~/Scripts/knockout.validation.min.js"></script>*@
}


@*<h2>Create</h2>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />

    <div class="form-horizontal">
        <h4> Employee </h4>
        <hr>
        <div class="form-group">
            <label class="control-label col-md-2" for="EmployeeName"> EmployeeName </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="EmployeeName" name="EmployeeName" type="text" value="" data-bind="value: EmployeeName">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="EmailID"> EmailID </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="EmailID" name="EmailID" type="text" value="" data-bind="value: EmailID">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="PhoneNumber"> PhoneNumber </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="PhoneNumber" name="PhoneNumber" type="text" value="" data-bind="value: PhoneNumber">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Address"> Address </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="Address" name="Address" type="text" value="" data-bind="value: Address">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="DateOfBirth"> DateOfBirth </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="DateOfBirth" name="DateOfBirth" type="text" value="" data-bind="value: DateOfBirth">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="DateOfJoining"> DateOfJoining </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="DateOfJoining" name="DateOfJoining" type="text" value="" data-bind="value: DateOfJoining">
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2" for="Salary"> Salary </label>
            <div class="col-md-10">
                <input class="form-control text-box single-line" id="Salary" name="Salary" type="text" value="" data-bind="value: Salary">
            </div>
        </div>
        <div class = "form-group" >
            <div class = "col-md-offset-2 col-md-10" >
                <input type = "button"data-bind = "click: CreateEmployee"value = "Create"class = "btn btn-default" >
            </div>
        </div>
    </div>
    <div> @Html.ActionLink("Back to List", "") </div>
    <script src="~/Scripts/knockout-3.5.1.js"></script>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>

    <script>
        function EmployeeViewModel() {
            var self = this;
            self.EmployeeName = ko.observable('');
            self.EmailID = ko.observable('');
            self.PhoneNumber = ko.observable('');
            self.Address = ko.observable('');
            self.DateOfBirth = ko.observable('');
            self.DateOfJoining = ko.observable('');
            self.Salary = ko.observable('');

            self.CreateEmployee = function () {
                if (validateForm()) {
                    var employeedata =
                    {
                        EmployeeName: self.EmployeeName(),
                        EmailID: self.EmailID(),
                        PhoneNumber: self.PhoneNumber(),
                        Address: self.Address(),
                        DateOfBirth: self.DateOfBirth(),
                        DateOfJoining: self.DateOfJoining(),
                        Salary: self.Salary(),
                    };
                    $.ajax({
                        url: '/Employee/CreateEmployee',
                        type: 'POST',
                        dataType: 'text',
                        data: employeedata,
                        success: function (data) {
                            alert('Employee added successfully!');

                        },
                        error: function () {
                            alert('An error occurred while adding the employee.');
                        }
                    });
                }
            };
            function validateForm() {
                if (self.EmployeeName() === '') {
                    alert('Please enter the Employee Name.');
                    return false;
                }
                if (self.EmailID() === '') {
                    alert('Please enter the Email ID.');
                    return false;
                }
                if (self.PhoneNumber() === '') {
                    alert('Please enter the PhoneNumber.');
                    return false;
                }
                if (self.Address() === '') {
                    alert('Please enter the Address.');
                    return false;
                }
                if (self.DateOfBirth() === '') {
                    alert('Please enter the DateOfBirth.');
                    return false;
                }
                if (self.DateOfJoining() === '') {
                    alert('Please enter the DateOfJoining.');
                    return false;
                }
                if (self.Salary() === '') {
                    alert('Please enter the Salary.');
                    return false;
                }
                return true;
            }
        }
        var viewModel = new EmployeeViewModel();
        ko.applyBindings(viewModel);
    </script>*@

@*using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Employee</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateOfJoining, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateOfJoining, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateOfJoining, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
